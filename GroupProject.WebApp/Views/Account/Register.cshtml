@using GroupProject.WebApp.Models.AccountViewModels
@model GroupProject.WebApp.Models.AccountViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register -Streamit";
    Layout = "~/Views/Shared/_EmptyLayout.cshtml";
}

<!-- loader Start -->
<div id="loading">
    <div id="loading-center">
    </div>
</div>
<!-- loader END -->

<section class="sign-in-page">
    <div class="container">
        <div class="row justify-content-center align-items-center height-self-center">
            <div class="col-lg-7 col-md-12 align-self-center">
                <div class="sign-user_card ">
                    <div class="sign-in-page-data">
                        <div class="sign-in-from w-100 m-auto">

                            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                             {
                                @Html.AntiForgeryToken()
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(vm => vm.UserName, new { @class = "text-primary" })<text class="text-primary"> *</text>
                                            @Html.EditorFor(vm => vm.UserName, new { htmlAttributes = new { @class = "form-control mb-0", autocomplete = "off", placeholder = "Enter Username" } })
                                            @Html.ValidationMessageFor(vm => vm.UserName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(vm => vm.Email, new { @class = "text-primary" })<text class="text-primary"> *</text>
                                            @Html.EditorFor(vm => vm.Email, new { htmlAttributes = new { @class = "form-control mb-0", placeholder = "Enter email " } })
                                            @Html.ValidationMessageFor(vm => vm.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(vm => vm.FirstName, new { @class = "text-primary" })<text class="text-primary"> *</text>
                                            @Html.EditorFor(vm => vm.FirstName, new { htmlAttributes = new { @class = "form-control mb-0", autocomplete = "off", placeholder = "First Name" } })
                                            @Html.ValidationMessageFor(vm => vm.FirstName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(vm => vm.LastName, new { @class = "text-primary" })<text class="text-primary"> *</text>
                                            @Html.EditorFor(vm => vm.LastName, new { htmlAttributes = new { @class = "form-control mb-0", autocomplete = "off", placeholder = "Last Name" } })
                                            @Html.ValidationMessageFor(vm => vm.LastName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(vm => vm.Password, new { @class = "text-primary" })<text class="text-primary"> *</text>
                                            @Html.PasswordFor(vm => vm.Password, new { htmlAttributes = new { @class = "form-control mb-0", autocomplete = "off", placeholder = "Password" } })
                                            @Html.ValidationMessageFor(vm => vm.Password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(vm => vm.ConfirmPassword, new { @class = "text-primary" })<text class="text-primary"> *</text>
                                            @Html.PasswordFor(vm => vm.ConfirmPassword, new { htmlAttributes = new { @class = "form-control mb-0", autocomplete = "off", placeholder = "Password" } })
                                            @Html.ValidationMessageFor(vm => vm.ConfirmPassword, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-12">
                                        <div class="form-group">
                                            @Html.LabelFor(vm => vm.DateOfBirth, new { @class = "text-primary" })<text class="text-primary"> *</text>
                                            @Html.EditorFor(vm => vm.DateOfBirth, new { htmlAttributes = new { @class = "form-control mb-0", autocomplete = "off" } })
                                            @Html.ValidationMessageFor(vm => vm.DateOfBirth, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <button type="submit" class="btn btn-hover my-2">Sign Up</button>
                                @Html.ActionLink("Back", "Login", "Account", new { @class = "btn btn-hover my-2 pull-right" })
                             }

                            <br/>
                            @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                        </div>
                    </div>
                    <div class="mt-3">
                        <div class="d-flex justify-content-center links">
                            Already have an account? <a href="~/Account/login" class="text-primary ml-2">Sign In</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
